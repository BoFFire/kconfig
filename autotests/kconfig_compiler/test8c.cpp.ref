// This file is generated by kconfig_compiler_kf5 from test8a.kcfg.
// All changes you do to this file will be lost.

#include "test8c.h"

#include <qglobal.h>
#include <QtCore/QFile>

#include <QDebug>

class Test8cHelper
{
  public:
    Test8cHelper() : q(0) {}
    ~Test8cHelper() { delete q; }
    Test8c *q;
};
Q_GLOBAL_STATIC(Test8cHelper, s_globalTest8c)
Test8c *Test8c::self()
{
  if (!s_globalTest8c()->q)
     qFatal("you need to call Test8c::instance before using");
  return s_globalTest8c()->q;
}

void Test8c::instance(const QString& cfgfilename)
{
  if (s_globalTest8c()->q) {
     qDebug() << "Test8c::instance called after the first use - ignoring";
     return;
  }
  new Test8c(KSharedConfig::openConfig(cfgfilename));
  s_globalTest8c()->q->read();
}

void Test8c::instance(KSharedConfig::Ptr config)
{
  if (s_globalTest8c()->q) {
     qDebug() << "Test8c::instance called after the first use - ignoring";
     return;
  }
  new Test8c(config);
  s_globalTest8c()->q->read();
}

Test8c::Test8c(  KSharedConfig::Ptr config  )
  : KConfigSkeleton( config )
{
  Q_ASSERT(!s_globalTest8c()->q);
  s_globalTest8c()->q = this;
  setCurrentGroup( QStringLiteral( "Group" ) );

  KConfigSkeleton::ItemFont  *itemFont;
  itemFont = new KConfigSkeleton::ItemFont( currentGroup(), QStringLiteral( "Font" ), mFont, QFont() );
  addItem( itemFont, QStringLiteral( "Font" ) );
  KConfigSkeleton::ItemFont  *itemTitleFont;
  itemTitleFont = new KConfigSkeleton::ItemFont( currentGroup(), QStringLiteral( "TitleFont" ), mTitleFont, QFont() );
  addItem( itemTitleFont, QStringLiteral( "TitleFont" ) );
}

Test8c::~Test8c()
{
  s_globalTest8c()->q = 0;
}

